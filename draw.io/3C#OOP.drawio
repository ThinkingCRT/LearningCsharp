<mxfile host="Electron" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/26.1.1 Chrome/132.0.6834.210 Electron/34.3.3 Safari/537.36" version="26.1.1">
  <diagram name="Страница — 1" id="boBSxxWM6M7pVq6Nzn3d">
    <mxGraphModel dx="7414" dy="-8399" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="0" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="soBJTtduUBVZZu6cVqsQ-1" value="&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 24px;&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/div&gt;&lt;b style=&quot;font-size: 24px;&quot;&gt;&lt;div&gt;&lt;b style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Классы, объекты, структуры, пространства имён&lt;/b&gt;&lt;/div&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-------------------------&lt;/span&gt;&lt;b style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); white-space: normal; font-size: 24px;&quot;&gt;&lt;/b&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;b style=&quot;font-size: 24px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;b style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Всё о пространствах имён и подключениях&lt;/b&gt;&lt;/div&gt;&lt;/b&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;namespace CSharp{} &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;-&amp;nbsp; пример пространства имён&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;namespace CSharp.LearningClassObjStruct {}&amp;nbsp; &amp;nbsp; &amp;nbsp; -&amp;nbsp; пример вложенного пространства имён&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px; font-weight: normal;&quot;&gt;using CSsharp.LearningClassObgStruct {}&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;-&amp;nbsp; использованиие пространства имён&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&lt;div&gt;&lt;span&gt;global&amp;nbsp;&lt;/span&gt;&lt;span&gt;using CSsharp.LearningClassObgStruct {}&amp;nbsp; -&amp;nbsp; использованиие пространства имён во всей сборке&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&lt;div&gt;&lt;span&gt;using print = System.Console &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;-&amp;nbsp; использование псевдонима вместо print&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&lt;div&gt;&lt;span&gt;using static System.Console &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;-&amp;nbsp; использование методов Console без объявления обращения к классу&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b style=&quot;font-size: 24px;&quot;&gt;&lt;div&gt;&lt;b&gt;Объекты - экземпляры класса (шаблона, чертежа)&lt;/b&gt;&lt;/div&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b style=&quot;font-size: 24px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;//&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;Building&lt;/span&gt;&lt;font face=&quot;Helvetica&quot;&gt;- класс&lt;/font&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span&gt;&lt;font&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;/ house - имя объекта&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;div&gt;&lt;span&gt;// new - создание экземпляра класса, выделение памяти и вызов конструктора&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;//&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;Building&lt;/span&gt;&lt;font face=&quot;Helvetica&quot;&gt;() - вызов конструктора - см.ниже&lt;/font&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&lt;div&gt;&lt;span&gt;// 1) Либо есть кастомный конструктор, который инициализирует поля&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&lt;div&gt;&lt;span&gt;// 2) Либо он создаёт пустой конструктор, а инициализация полей созадётся ниже объекта&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot; face=&quot;Helvetica&quot;&gt;&lt;div&gt;&lt;span&gt;// Подкапотка: Persone Alex(стек, stack), new Persone(управляемая куча, heap)&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot; face=&quot;Helvetica&quot;&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;var house = new&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;Building&lt;/span&gt;&lt;font face=&quot;Helvetica&quot;&gt;(); - используем var для синтаксического сахара&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;(когда мы 100% знаем, что правый операнд будет соответсвовать слевому&lt;/font&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span&gt;------------------------&lt;/span&gt;&lt;span&gt;------------------------------------&lt;/span&gt;&lt;span&gt;-----------------&lt;/span&gt;&lt;span&gt;-----------------&lt;/span&gt;&lt;span&gt;-------------------------&lt;/span&gt;&lt;font style=&quot;font-size: 12px; white-space: normal;&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;span&gt;------------------------&lt;/span&gt;&lt;span&gt;----------------------------------------------&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot; face=&quot;Helvetica&quot;&gt;&lt;div style=&quot;white-space: pre;&quot;&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;Классы - характеристики (шаблон) для объектов, чертеж для объектов&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot; face=&quot;Helvetica&quot;&gt;&lt;div style=&quot;line-height: 24px; white-space: pre;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 18px;&quot;&gt;&lt;div&gt;&lt;span&gt;class Building&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot; face=&quot;Helvetica&quot;&gt;&lt;div style=&quot;white-space: pre;&quot;&gt;&lt;div&gt;{&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Шаблон для объекта, который реализует определённый функционал:&lt;/div&gt;&lt;div style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: normal; background-color: transparent;&quot;&gt;Сложных объектов с поведением.&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: normal; background-color: transparent;&quot;&gt;Моделей предметной области (например,&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: normal; background-color: transparent;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: normal; background-color: transparent; font-weight: var(--ds-font-weight-strong); border-radius: 4px; padding: 0.15rem 0.3rem;&quot;&gt;Order&lt;/code&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: normal; background-color: transparent;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: normal; background-color: transparent;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: normal; background-color: transparent; font-weight: var(--ds-font-weight-strong); border-radius: 4px; padding: 0.15rem 0.3rem;&quot;&gt;User&lt;/code&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: normal; background-color: transparent;&quot;&gt;).&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: normal; background-color: transparent;&quot;&gt;Всё, что требует наследования.&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 18px;&quot;&gt;&lt;div&gt;&lt;span&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot; face=&quot;Helvetica&quot;&gt;&lt;div style=&quot;line-height: 24px; white-space: pre;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Структуры - характеристики (шаблон) для объектов с маленьким неизменных&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;объёмом данных&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;struct PersonStuct&lt;br&gt;{&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Такой же шаблон для объекта только для:&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;span style=&quot;font-family: DeepSeek-CJK-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;Noto Sans&amp;quot;, Ubuntu, Cantarell, &amp;quot;Helvetica Neue&amp;quot;, Oxygen, &amp;quot;Open Sans&amp;quot;, sans-serif; font-size: 16.002px; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;font-family: DeepSeek-CJK-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;Noto Sans&amp;quot;, Ubuntu, Cantarell, &amp;quot;Helvetica Neue&amp;quot;, Oxygen, &amp;quot;Open Sans&amp;quot;, sans-serif; font-size: 16.002px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Простых DTO (Data Transfer Objects).&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Координат, векторов, цветов.&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Неизменяемых объектов (например,&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-weight: var(--ds-font-weight-strong); border-radius: 4px; padding: 0.15rem 0.3rem;&quot;&gt;DateTime&lt;/code&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;).&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: DeepSeek-CJK-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;Noto Sans&amp;quot;, Ubuntu, Cantarell, &amp;quot;Helvetica Neue&amp;quot;, Oxygen, &amp;quot;Open Sans&amp;quot;, sans-serif; font-size: 16.002px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Область видимости (контекст) переменных - где переменные видны&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;class Person                             &lt;br&gt;{&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;//поле класса - доступна всем, кто ниже по абстракции&lt;br&gt;    string type = &quot;Person&quot;;              &lt;br&gt;    public void PrintName()              &lt;br&gt;    {&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;    //поле метода PrintName - доступно всем, кто ниже по абстракции&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;  &lt;br&gt;        string name = &quot;Tom&quot;;             &lt;br&gt;  &lt;br&gt;        {&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&#x9;//поле блока в метода PrintName&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;                                &lt;br&gt;            string shortName = &quot;Tomas&quot;;  &lt;br&gt;            Console.WriteLine(type);     &lt;br&gt;            Console.WriteLine(name);&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&#x9;    Console.WriteLine(surname);     - нельзя т.к. поле в другом  методе&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;            Console.WriteLine(shortName); - можно только в этом блоке кода&lt;br&gt;        }                                &lt;br&gt;  &lt;br&gt;        Console.WriteLine(type);         &lt;br&gt;        Console.WriteLine(name);         &lt;br&gt;        //Console.WriteLine(shortName);  - нельзя т.к. это поле ниже по абстракции&lt;br&gt;        //Console.WriteLine(surname);      - нельзя т.к. это поле в другом методе&lt;br&gt;  &lt;br&gt;    }                                    &lt;br&gt;    &lt;br&gt;    public void PrintSurname()           &lt;br&gt;    {&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;    &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;//поле метода PrintSurname&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;        string surname = &quot;Smith&quot;;        &lt;br&gt;    &lt;br&gt;        Console.WriteLine(type);         &lt;br&gt;        Console.WriteLine(surname); &lt;/font&gt;&lt;span style=&quot;font-weight: bold; font-size: 24px;&quot;&gt;     &lt;br&gt;  &lt;/span&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;  }                                    &lt;br&gt;}&lt;/font&gt;&lt;/span&gt;&lt;b style=&quot;font-size: 24px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;b&gt;Модификаторы доступа - приминимо для всех компонентов&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;private&lt;/b&gt; - закрытый, доступен только в рамках своего класса&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;b&gt;private protect &lt;/b&gt;- доступен в рамках своего класса и производного класса, кот. оперд. в той же сборке&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;b&gt;file&lt;/b&gt; - с C#11, класс или структура доступны только в рамках этого файла&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;protected&lt;/b&gt; - так же, как private protect, только можно производные классы ис. в др. сборках&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;internal&lt;/b&gt; - доступен в рамках своей сборке, недоступен в др. программе или сборке&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;protected internal&lt;/b&gt; - совмещает функционал двух - доступен в текущей сборке и из производных классов,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;которые могут располагаться в других сборках&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;public&lt;/b&gt; - доступен в своей и др. сборке не имея ограничений&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;структуры принимают те же модиф. кроме private protected, protected и protected internal =&amp;gt; private, internal, public&lt;br&gt;классы принимают internal public, для вложенных - private, pretected и др.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;если компоненты класса или структуры не имеют модиф. =&amp;gt; private&lt;br&gt;если класс или структура не имеет модиф. =&amp;gt; interna&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px; white-space: pre; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;div&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b style=&quot;&quot;&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Конструктор - это механизм создание и инициализации экземпляря, строительная бригада.&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;По производсвенным св-вам - это конвеер&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 18px;&quot;&gt;class Building&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot; face=&quot;Helvetica&quot;&gt;&lt;div style=&quot;white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&#x9;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Building()&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;{&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;Механизм созадния объекта который:&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Автоматический вызов - запускакет конвеер&lt;/div&gt;&lt;div&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Инициализирует состояние объекта - инициализирует значение переменных, св-в&lt;br&gt;&lt;/div&gt;&lt;div&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Гарантирует валидность&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;}&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 18px;&quot;&gt;}&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;br style=&quot;font-size: 12px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;Статика -&amp;nbsp; модификатор static - поле, которое относиться ко всем объектам, а не только к одному конкретному (по значению) - принадлежат только классу, а не объектам&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;Ещё один важный момент: обращение к статике, только чрез имя класса&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Статические поля:&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;line-height: 21px; white-space: pre;&quot;&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot; face=&quot;Helvetica&quot;&gt;public static int retirementAge = 65;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px; white-space: pre;&quot;&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot; face=&quot;Helvetica&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;Все остальные компоненты имеют такой же семантический смысл, только с некоторыми ограничениями:&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;Общие ограничения - нельзя использовать this, не поддерживают полиморфизм&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Св-ва - ограничений не имеют&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Методы - не могут обращаться к нестатическим компонентам&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Конструктор - вызывается один раз, не имеет параметров и модификаторов доступа&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Классы - нельзя получать экземпляры класса, не реализует интерфейсы&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;b style=&quot;&quot;&gt;Константы класса, поля и структуры для чтения:&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;Константы - &lt;/b&gt;поля класса, которые нельзя изменить и определяются на этапе компиляции&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;Поля для чтения - &lt;/b&gt;private readonly string name - по смыслу так же, как константа, но инициализируется в конструкторе&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;Структуры для чтения -&lt;/b&gt; все поля долны иметь модификатор readonly, св-ва только get&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Null и ссылочные типы&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;font-size: 18px;&quot;&gt;До C#8 можно было строком придавать значение null&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;font-size: 18px;&quot;&gt;C#8+ строкам с пустым значением нужно присваивать string? - nullable-типы&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;font-size: 18px;&quot;&gt;К примеру ReadLine - возвращает значение string?, а не просто string&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;font-size: 18px;&quot;&gt;Применение nullable - базы данных, где возможно нет объекта&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;font-size: 18px;&quot;&gt;Обычные же переменные ссылочного типа следует инициализировать&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;font-size: 18px;&quot;&gt;С .NET6 И C#10 при выполнении кода с null в ссылочном типе, выдаст предупреждение&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Null и значимые типы&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;В отличии от ссылочных типов, значимым типам нельзя присвоить значение null&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Хотя, было бы удобно, если делать запросы к БД (мало ли есть эллементы с пустым значение)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Присваиваивается nullable-тип аналогично ссылочному варианту&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;nullable проверяется на nullable тип, иначе проверить значение нельзя&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Проверка на null ? и ??&amp;nbsp; Защищаемся от null и предупреждения. Оператор условного null ?.&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;Проверка на null ? - Защита от null и предупреждений&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;void PrintUpperDont(string? text)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (text!=null)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Console.WriteLine(text.ToUpper());&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;Проверка на null ?? - null-объеденение&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;pre style=&quot;font-size: 18px; color: rgb(0, 0, 0); font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;name &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;??=&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token string&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;  - если name null - то вернёт Default, если не нулл, вернёт предыдущее значение.&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px; color: rgb(0, 0, 0); font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;Нельзя ??= использовать там, где априори в типе данных null не может быть&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px; color: rgb(0, 0, 0); font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px; color: rgb(0, 0, 0); font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;b&gt;Проверка на null ?. - компоненты класса и объекты&lt;/b&gt;&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px; color: rgb(0, 0, 0); font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;div style=&quot;line-height: 21px; text-wrap-mode: nowrap;&quot;&gt;&lt;span&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;color: rgb(0, 0, 0); font-size: 16px;&quot;&gt;объект?.компонент?.компонент?.метод()&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;div style=&quot;line-height: 21px; text-wrap-mode: nowrap;&quot;&gt;&lt;span&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;color: rgb(0, 0, 0); font-size: 16px;&quot;&gt;Console.WriteLine(person?.Company?.WebSite?.ToUpper()); - если цепочка компонентов не null, то запустит метод&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Свойства класса - мостик между переменной и методами&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 22px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;Такой вид имеют св-ва по дефолту&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;private string name = &quot;Property&quot;;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;public string Name&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; // Действия, выполняемые при получении значения свойства (чтение)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; get&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Значение возвращается&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return name;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; // Действия, выполняемые при записи значения свойства (запись)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; set&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; {&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Устанавливается новое значение&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; name = value;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;Аналогично тому, что выше - называется автосвойство - скрыто генерирует переменную Name&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;public string Name&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;font-size: 18px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 18px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;get; set; }&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Перегрузка методов - один и тот же метод с разными параметрами и модификаторами (сигнатуры)&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Сигнатура - название_метода(параметры)&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;public void Add(int a, int b)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; int result = a + b;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; Console.WriteLine($&quot;Result is {result}&quot;);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;public void Add(int a, int b, int c)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; int result = a + b + c;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; Console.WriteLine($&quot;Result is {result}&quot;);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;public void Add(double a, double b)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; double result = a + b;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; Console.WriteLine($&quot;Result is {result}&quot;);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&lt;br style=&quot;font-size: 12px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 12px;&quot;&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=middle;horizontal=1;labelPosition=center;verticalLabelPosition=middle;labelBorderColor=none;labelBackgroundColor=none;spacing=0;" parent="1" vertex="1">
          <mxGeometry x="-680" y="16520" width="1280" height="6030" as="geometry" />
        </mxCell>
        <mxCell id="soBJTtduUBVZZu6cVqsQ-3" value="&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;-------------------------------------------------------------------------------------------------------------------------&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Манипуляции в объектах:&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Persone alex = new Persone();&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;// Инициализируем значения из поля класс&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;alex.name = &quot;Alex&quot;;&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;alex.age = 21;&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;// Вызываем метод класса&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;alex.printExemple();&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Если DTO - Да&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Во всех остальных случаях использовать икапсуляцию&lt;/span&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;{&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div style=&quot;line-height: 21px; white-space: pre;&quot;&gt;&lt;span&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;PersoneConstructor dmitryAge = new PersoneConstructor(&quot;Dmitry&quot;, 20);&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Если DTO и простой код без валидации - да и то использовать record или через init св-ва&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; dmitry &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token constructor-invocation class-name&quot;&gt;Person&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Name &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token string&quot;&gt;&quot;Dmitry&quot;&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Age &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token number&quot;&gt;20&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Во всех остальных случаях использовать инкапсуляцию&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;}&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;var dmitryAge = new &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;PersoneConstructor()&lt;/span&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;Лучший способ, когда инициализация значений и логика будет реализованна внутри класса&lt;/span&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;b style=&quot;font-size: 24px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-------------------------------------------------------------------------------------------------------------------------&lt;/b&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;b style=&quot;font-size: 24px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Конструктор:&lt;/b&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;public PersoneConstructorDefoultValue(string name = &quot;Uncown&quot;, int age = 0)&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&amp;nbsp;&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; this.name = name;&amp;nbsp;&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; this.age = age;&amp;nbsp;&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; PrintConstructor();&amp;nbsp;&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;+Инициализирует значения по умолчанию&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;+Переопределение записывает в переменную&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: pre; background-color: transparent;&quot;&gt;Для DTO, моделей данных, простых сущностей от 2-5 полей&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: pre; background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); font-size: 18px; white-space: pre; background-color: transparent;&quot;&gt;- Не подходит для сценариев, где есть логика, а не значение&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;// При сценарии с пустым методом, this помещает &quot;Неизвестное значение&quot;&lt;/span&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;public PersoneChainConstructionThis() : this(&quot;Неизвестные значения&quot;) {}&lt;br&gt;// При сценарии, где только name, this возвращает name с поля класса и зн. по умолчанию&lt;br&gt;public PersoneChainConstructionThis(string name) : this(name, 16) {}&lt;br&gt;// При данном сценарии, this возвращает значения из поля класса&lt;br&gt;public PersoneChainConstructionThis(string name, int age)&lt;br&gt;{&lt;br&gt;&amp;nbsp; &amp;nbsp; this.name = name;&lt;br&gt;&amp;nbsp; &amp;nbsp; this.age = age;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;+ Использование перегрузки методов&lt;br&gt;+ Имеет значение по умолчанию&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;+ Соответсвует принципу DRY&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;+ Показывает возможные комбинации&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Если менять конструктор, то сломает логику тех, что ниже&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;- Опять же, если логика, то мимо, если значение, то пойдёт&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Ещё конструктор можно инициализировать в классе - удобно и рекомендованно&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;В конструкторе пишется сценарий выполнения программы, а не простая инициализация значений&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;b style=&quot;font-size: 24px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;b style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 24px;&quot;&gt;-------------------------------------------------------------------------------------------------------------------------&lt;/b&gt;&lt;b style=&quot;font-size: 24px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/b&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 24px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Св-ва&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;// Автосвойство&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;div&gt;public string Name&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;get; set; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;b&gt;// Автосвойство&lt;/b&gt;&lt;/div&gt;&lt;div&gt;public string Name&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;get; set; } = name; - со значением по умолчание, либо exeption на null - рекомендуется&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;// Валидация&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;public int Age&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; set&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (value &amp;lt; 1 || value &amp;gt; 120)&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Console.WriteLine(&quot;Возраст должен быть в диапазоне от 1 до 120&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // value != переменная, это параметр&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; age = value;&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; get { return age; }&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;// Возврат выражения&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;public string Name&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; get { return&amp;nbsp; $&quot;{firstName} {lastName}&quot;; }&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;// Значение задаётся при инициализации - в конструкторе&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;line-height: 21px; white-space: pre;&quot;&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;public string? Name { &lt;span style=&quot;font-style: italic;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;font-style: italic;&quot;&gt;init&lt;/span&gt;; }&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px; white-space: pre;&quot;&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;public PersonInitConstruction(string name, int age)&lt;br&gt;{&lt;br&gt;    Name = name;&lt;br&gt;    Age = age;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre; background-color: rgb(255, 255, 255);&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;// Значение задаётся при инициализации - в init&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;private string nameInit = &quot;&quot;;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;public string NameInit&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; get { return nameInit; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; init&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; nameInit = value;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Email = $&quot;{value}@gmail.com&quot;;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;public string Email { get; init; } = &quot;&quot;;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;font&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;var person = new PersonInitEmail { NameInit = &quot;Lonsdale&quot; };&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - через инит&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;Console.WriteLine(person.Email);&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- Lonsdale@gmail.com&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;&lt;b&gt;// Сокращение записи&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;public string Name&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;{&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;&amp;nbsp; &amp;nbsp; get =&amp;gt; name;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// return name&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;&amp;nbsp; &amp;nbsp; set =&amp;gt; name = value; // return name = value&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;&lt;b&gt;// Модификатор requirer&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;public PersonRequiredProp(string name)&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;&amp;nbsp; &amp;nbsp; Name = name;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;public required string Name { get; set; }&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; line-height: 21px;&quot;&gt;public required int Age { get; set; } = 22; // даже с тем условие, что есть значение по умолчанию&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;div style=&quot;line-height: 21px; white-space: pre;&quot;&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot;&gt;var bob = new PersonRequiredProp(&quot;Bob&quot;); // ошибка - свойства Name и Age все равно надо установить в конструкторе&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;b style=&quot;white-space: normal; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 24px;&quot;&gt;-------------------------------------------------------------------------------------------------------------------------&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;readonly и св-вом с private set&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Поле readonly доступно только для чтения и инициализируется в конструкторе, не изменяется вне класса&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;св-во с private set доступно для чтения вне класса, но можно изменять внутри&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;div&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;div style=&quot;line-height: 21px;&quot;&gt;&lt;b style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 24px;&quot;&gt;-------------------------------------------------------------------------------------------------------------------------&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b style=&quot;&quot;&gt;Когда использовать поля, когда св-ва, когда вместе&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;color: rgb(0, 0, 0); background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); font-size: 18px;&quot;&gt;🔹&amp;nbsp;&lt;strong style=&quot;&quot;&gt;Поля&lt;/strong&gt;&amp;nbsp;– для &quot;кухни&quot; класса.&lt;br style=&quot;&quot;&gt;🔹&amp;nbsp;&lt;strong style=&quot;&quot;&gt;Свойства&lt;/strong&gt;&amp;nbsp;– для публичного API + контроль.&lt;br style=&quot;&quot;&gt;🔹&amp;nbsp;&lt;strong style=&quot;&quot;&gt;Автосвойства&lt;/strong&gt;&amp;nbsp;– если логика не нужна.&lt;br style=&quot;&quot;&gt;🔹&amp;nbsp;&lt;strong style=&quot;&quot;&gt;Явные поля + свойства&lt;/strong&gt;&amp;nbsp;– если нужен полный контроль.&lt;/font&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;blockquote style=&quot;font-size: 12px; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/font&gt;&lt;/blockquote&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="760" y="16520" width="1200" height="3552" as="geometry" />
        </mxCell>
        <mxCell id="b9FqLcnt7vGdt-Baqenq-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="soBJTtduUBVZZu6cVqsQ-7" target="soBJTtduUBVZZu6cVqsQ-8">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="soBJTtduUBVZZu6cVqsQ-7" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 24px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;/div&gt;&lt;blockquote style=&quot;text-align: left; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Стандарт структуры класса в C# - для более детального разбора функционала см. ниже&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;text-align: left; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;BankAccount&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token comment&quot;&gt;// 1. Константы (public → private)&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; DefaultCurrency &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token string&quot;&gt;&quot;USD&quot;&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt; MaxLoginAttempts &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token comment&quot;&gt;// 2. Статические поля (readonly → mutable)&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;DateTime&lt;/span&gt; _globalCreationTime&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt; _totalAccountsCreated&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token comment&quot;&gt;// 3. Поля экземпляра (readonly → mutable)&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; _accountNumber&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;decimal&lt;/span&gt;&lt;/span&gt; _balance&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;DateTime&lt;/span&gt; _lastActivity&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token comment&quot;&gt;// 4. Конструкторы (от простого к сложному)&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token function&quot;&gt;BankAccount&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        _globalCreationTime &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; DateTime&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;UtcNow&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token function&quot;&gt;BankAccount&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; accountNumber&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;accountNumber&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token function&quot;&gt;BankAccount&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; accountNumber&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;decimal&lt;/span&gt;&lt;/span&gt; initialBalance&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        _accountNumber &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; accountNumber &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;??&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token constructor-invocation class-name&quot;&gt;ArgumentNullException&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;nameof&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;accountNumber&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        _balance &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; initialBalance&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        _totalAccountsCreated&lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token comment&quot;&gt;// 5. Свойства (публичные → внутренние)&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token return-type class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; AccountNumber &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; _accountNumber&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token return-type class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;decimal&lt;/span&gt;&lt;/span&gt; Balance&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;get&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; _balance&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;set&lt;/span&gt;&lt;br&gt;        &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;            &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;value&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;                &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token constructor-invocation class-name&quot;&gt;ArgumentException&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token string&quot;&gt;&quot;Balance cannot be negative&quot;&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;            _balance &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;            _lastActivity &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; DateTime&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;UtcNow&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;        &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token comment&quot;&gt;// 6. Методы (публичные → protected → private)&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token return-type class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token function&quot;&gt;Deposit&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;decimal&lt;/span&gt;&lt;/span&gt; amount&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br&gt;        &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;amount &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;            &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token constructor-invocation class-name&quot;&gt;ArgumentException&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token string&quot;&gt;&quot;Amount must be positive&quot;&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;            &lt;br&gt;        Balance &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;+=&lt;/span&gt; amount&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;override&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token return-type class-name&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;br&gt;        &lt;span style=&quot;&quot; class=&quot;token interpolation-string&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token string&quot;&gt;$&quot;Account &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token expression language-csharp&quot;&gt;_accountNumber&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token string&quot;&gt;, Balance: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token expression language-csharp&quot;&gt;Balance&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token expression language-csharp&quot;&gt;DefaultCurrency&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token string&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token comment&quot;&gt;// 7. События&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;event&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;Action&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;decimal&lt;/span&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; BalanceChanged&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token comment&quot;&gt;// 8. Вложенные типы&lt;/span&gt;&lt;br&gt;    &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token keyword&quot;&gt;enum&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token class-name&quot;&gt;AccountStatus&lt;/span&gt; &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Active&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Frozen&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Closed &lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/font&gt;&lt;/blockquote&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="-520" y="13960" width="960" height="1600" as="geometry" />
        </mxCell>
        <mxCell id="soBJTtduUBVZZu6cVqsQ-12" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="soBJTtduUBVZZu6cVqsQ-8" target="soBJTtduUBVZZu6cVqsQ-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="b9FqLcnt7vGdt-Baqenq-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="soBJTtduUBVZZu6cVqsQ-8" target="soBJTtduUBVZZu6cVqsQ-9">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="soBJTtduUBVZZu6cVqsQ-8" value="&lt;b&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;Описание компонентов от начала абстракции на понижение&lt;/font&gt;&lt;/b&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-680" y="15720" width="1280" height="640" as="geometry" />
        </mxCell>
        <mxCell id="soBJTtduUBVZZu6cVqsQ-13" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="soBJTtduUBVZZu6cVqsQ-9" target="soBJTtduUBVZZu6cVqsQ-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="soBJTtduUBVZZu6cVqsQ-9" value="&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;b style=&quot;&quot;&gt;Пояснение функционала структур и назначение использования&lt;/b&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="760" y="15720" width="1200" height="640" as="geometry" />
        </mxCell>
        <mxCell id="605FtFUrUYsoKgKRZK4R-2" value="&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;div style=&quot;font-size: 24px;&quot;&gt;&lt;div style=&quot;font-size: 12px; color: rgb(0, 0, 0);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;Абстракции - реализация полиморфизма, указываем наследникам, общие св-ва, методы, поля&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;b style=&quot;font-weight: bold; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Абстрактный класс&lt;/b&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; - шаблон для других классов, у которых есть логическая связь&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px; white-space: pre; font-weight: bold;&quot;&gt;&lt;b style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;Абстрактный класс&lt;br&gt;&lt;/b&gt;Нельзя создать напрямую (нельзя new AbstractClass()).&lt;br&gt;Может содержать абстрактные (нереализованные) и обычные (реализованные) методы и свойства.&lt;br&gt;Предназначен для наследования (от него должны наследоваться другие классы).&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;&lt;br&gt;Абстрактные методы&lt;br&gt;&lt;/b&gt;Методы, которые так же не реализуют функционал, имеют только сигнатуру&lt;br&gt;Обеспечивает полиморфизм&lt;br&gt;Используется только в абстрактных классах&lt;br&gt;Должны переопределяться наследниками через override - обязательно&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;&lt;br&gt;Абстрактные св-ва&lt;br&gt;&lt;/b&gt;Всё так же как и в методах, только могут иметь или get и|или set&lt;br&gt;Конструкторы могут быть, но реализуются в наследниках&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;abstract class Animal&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;{&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; // Абстракции - реализуеся&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; public abstract string Species { get; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; public abstract void MakeSound();&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; // Виртуалка - переопределяется&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; public virtual void Eat()&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Console.WriteLine(&quot;Eating generic food&quot;);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; // И всё остальное, которое реализованно и содерживаться в классе, т.к. наследованно&lt;/font&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; protected string _name = &quot;&quot;;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; public void Sleep()&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Console.WriteLine($&quot;{_name} is sleeping...&quot;);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; public Animal(string name)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; _name = name;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 24px;&quot;&gt;&lt;div style=&quot;font-size: 12px; color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;--------------------------------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 24px;&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 24px; white-space: pre;&quot;&gt;&lt;b&gt;Наследование -  &lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;унаследование функционала другого класса, единственное, что не наслед. - конструкторы&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Класс который наследует - дорчерний, от которого наследуется - родительский или (суперкласс).&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Объект дочернего класса, так же является объектом родительского&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Так же все классы наследуются от базового Object и имеют методы по умоллчанию&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Object: ToString(), Equals(), GetHashCode() и GetType().&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;На примере класс InhtritPerson - родитель, который будем наследовать класс&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;font-size: 18px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Employee - сотрудник&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;class InheritPersone&lt;br&gt;{&lt;br&gt;    private string _name = &quot;Томас&quot;;&lt;br&gt;    private int _age = 23;&lt;br&gt;    public string Name { get {return _name;} set {_name = value;}}&lt;br&gt;    public int Age { get {return _age;} set {_age = value;}}&lt;br&gt;    public void PrintInherit()&lt;br&gt;    {&lt;br&gt;        Console.WriteLine($&quot;Имя: {Name}, возвраст: {Age}&quot;);&lt;br&gt;    }&lt;br&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;// Класс Employee - наследует класс InheritEmlpoyee&lt;br&gt;// Класс Employee - объект класса InheritEmlpoyee&lt;br&gt;class Employee : InheritPersone&lt;br&gt;{&lt;br&gt;    internal Employee()&lt;br&gt;    {&lt;br&gt;        PrintInherit();&lt;br&gt;    }&lt;br&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;Инициализация Employee:&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;Person person = new Person { Name = &quot;Tom&quot; };&lt;br&gt;person = new Employee { Name = &quot;Sam&quot; }; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- либо через объект родителя&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;Person p = new Employee() &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- либо напрямую, без инициализации родителя&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;--------------------------------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;Порядок очереди вызов конструкторов у наследника до родителя + ключевое слово base&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;class InheritPersoneConstruct&lt;br&gt;{&lt;br&gt;    protected string name = &quot;&quot;;&lt;br&gt;    protected int age = 0;&lt;br&gt;    &lt;br&gt;    public InheritPersoneConstruct(string name)&lt;br&gt;    {&lt;br&gt;        this.name = name;&lt;br&gt;        Console.WriteLine(&quot;Person(string name)&quot;);&lt;br&gt;    }&lt;br&gt;    // &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Обращается к конструктору своего класса&lt;br&gt;    public InheritPersoneConstruct(string name, int age) : this(name) &lt;br&gt;    {&lt;br&gt;        this.age = age;&lt;br&gt;        Console.WriteLine(&quot;Person(string name, int age)&quot;);&lt;br&gt;    }&lt;br&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;// base обращается к конструктору родительскому конструктору&lt;br&gt;// И того, конструкор наследника делегирует выполнение конструктора родителя и так далее до конструктора System.Object&lt;br&gt;// А потом System.Object выполняет возвращение конструкторов&lt;br&gt;class EmployeeConstruct : InheritPersoneConstruct&lt;br&gt;{&lt;br&gt;    string company = &quot;&quot;;&lt;br&gt;    &lt;br&gt;    public EmployeeConstruct(string name, int age, string company) : base(name, age) &lt;br&gt;    {&lt;br&gt;        this.company = company;&lt;br&gt;        Console.WriteLine(&quot;Employee(string name, int age, string company)&quot;);&lt;br&gt;    }&lt;br&gt;}&lt;/span&gt;&lt;b style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;div style=&quot;font-size: 12px; white-space: normal; color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;--------------------------------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot; face=&quot;Helvetica&quot;&gt;&lt;div style=&quot;white-space: pre;&quot;&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;Полиморфизм - создание виртуальных методов св-в (так же ещё есть интерфейсы&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;и перезагрузка методов, но перегрузку рассматривали, а интерфейсы позже)&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px; color: rgb(0, 0, 0);&quot; face=&quot;Helvetica&quot;&gt;&lt;div style=&quot;line-height: 24px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;// Виртуальные методы и св-ва - рекомендуется к использованию - переопределение метода&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;br&gt;// virtual - объявляется для методов или св-в, которые можно переопределить&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;// - определяются только в родительском классе&lt;br&gt;// - должен иметь модификатор ниже private, для того, что бы мог наследоваться&lt;br&gt;// - реализация полиморфизма&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;br&gt;// Ограничения - private, static, sealed, конструкторы&lt;br&gt;class TransportVirtual&lt;br&gt;{&lt;br&gt;    // Нужна базовая реализация, по сравнению с абстракцией&lt;br&gt;    public virtual void Move()&lt;br&gt;    {&lt;br&gt;        Console.WriteLine(&quot;Transport is moving&quot;);&lt;br&gt;    }&lt;br&gt;    &lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;    // &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Будет меняться логика чтения\записи&lt;br&gt;    public virtual int Speed { get; set; } = 100;&lt;br&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;br&gt;class CarVirtual : TransportVirtual&lt;br&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;    // override - объявляется только в произвольном классе&lt;br&gt;    // override - используется для abstract или virtual&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;br&gt;    public override void Move()&lt;br&gt;    {&lt;br&gt;        Console.WriteLine(&quot;Car is driving&quot;);&lt;br&gt;    }&lt;br&gt;    // override sealed - получает реализацию virtual, но переопределить след. наследнику запрещает&lt;br&gt;    public override sealed int Speed&lt;br&gt;    {&lt;br&gt;        // Повторюсь: base - обращение к базовой реализации класса&lt;br&gt;        get =&amp;gt; base.Speed * 2;&lt;br&gt;        set =&amp;gt; base.Speed = value;&lt;br&gt;    }&lt;br&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;br&gt;// TransportVirtual obj = new CarVirtual();&lt;br&gt;// obj.Move(); // Выведет &quot;Car is driving&quot; (ожидаемо для неподготовленного разработчика, метод переопределён)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;--------------------------------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0); white-space: pre;&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Обобщения - когда нужно чтобы св-во или метод принимали разные типы&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); white-space: pre;&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); white-space: pre;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Обобщенные классы&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); white-space: pre;&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;// Какую проблему решают обобщения? Разберёмся на примере:&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;class Person&lt;br&gt;{&lt;br&gt;    public int Id { get;}&lt;br&gt;    public string Name { get;}&lt;br&gt;    public Person(int id, string name)&lt;br&gt;    {&lt;br&gt;        Id = id; &lt;br&gt;        Name = name;&lt;br&gt;    }&lt;br&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;// Проблема св-ва Id в том, что  ID пользователя может быть числом, можнет быть строкой&lt;br&gt;// В зависимости от предпочтения разработчиков, но для универсальности, можно использовать&lt;br&gt;// boxing, unboxing пример ниже:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;class PersonObj&lt;br&gt;{&lt;br&gt;    // боксовое св-во&lt;br&gt;    public object Id { get;}&lt;br&gt;    public string Name { get;}&lt;br&gt;    public PersonObj(object id, string name)&lt;br&gt;    {&lt;br&gt;        Id = id; &lt;br&gt;        Name = name;&lt;br&gt;    }&lt;br&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;// var tom = new PersonObj(546, &quot;Tom&quot;);&lt;br&gt;// var bob = new PersonObj(&quot;abc123&quot;, &quot;Bob&quot;);&lt;br&gt;// int tomId = (int)tom.Id;         // Распаковка типа object&lt;br&gt;// string bobId = (string) bob.Id;  // Распаковка типа object&lt;br&gt;// Console.WriteLine(tomId);        // 546&lt;br&gt;// Console.WriteLine(bobId);        // abc123&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;// С одной стороны, мол ничего же такого, но &lt;br&gt;// Во-первых больше кода,&lt;br&gt;// Во-вторых вес значений тоже увеличивается,&lt;br&gt;// В-третьих производительность тоже падает из-за преобразований,&lt;br&gt;// В-четвёртых проблема с безопасностью типов - ошибка,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;// Посмотрим, как будет реализация через обобщения:&lt;br&gt;// Класс с параметром универсального типа данных и конструктором&lt;br&gt;class PersonGen&amp;lt;T&amp;gt;(T id, string name)&lt;br&gt;{&lt;br&gt;    // Тип данных св-ва, зависит от контекста, в котором оно используется&lt;br&gt;    public T Id { get; set; } = id;&lt;br&gt;    public string Name { get; set; } = name;&lt;br&gt;}&lt;br&gt;// var tom = new PersonGen&amp;lt;int&amp;gt;(546, &quot;Tom&quot;);         // Возвращает int, если другой тип - ошибка&lt;br&gt;// var bob = new PersonGen&amp;lt;string&amp;gt;(&quot;abc123&quot;, &quot;Bob&quot;); // Возвращает string&lt;br&gt;// int tomId = tom.Id;          // распаковка не нужна&lt;br&gt;// string bobId = bob.Id;       // преобразование типов не нужно&lt;br&gt;// Console.WriteLine(tomId);    // 546&lt;br&gt;// Console.WriteLine(bobId);    // abc123&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;b style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Обобщенные методы&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;public class Printer&lt;br&gt;{&lt;br&gt;    public void Print&amp;lt;T&amp;gt;(T value)&lt;br&gt;    {&lt;br&gt;        Console.WriteLine(value);&lt;br&gt;    }&lt;br&gt;}&lt;br&gt;// var printer = new Printer();&lt;br&gt;// printer.Print&amp;lt;int&amp;gt;(10);       // 10&lt;br&gt;// printer.Print&amp;lt;string&amp;gt;(&quot;Hi&quot;);  // Hi&lt;br&gt;// printer.Print(3.14);          // 3.14    // Можно опустить тип, компилятор выведет его сам:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;--------------------------------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;b style=&quot;white-space: pre;&quot;&gt;Ограничения обобщений - что бы класс принимал и реализововал определённый тип данных&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// Параметр обобщения принимает только объекты&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;class Messenger&amp;lt;T&amp;gt; &lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;where T : Message&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; // параметр принимает только объект от Message&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public void SendMessage(T message)&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Console.WriteLine($&quot;Отправляется сообщение: {message.Text}&quot;);&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;class Message&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public string Text { get; } &lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public Message(string text)&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Text = text;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;class EmailMessage : Message&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public EmailMessage(string text) : base(text) { }&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// var telegram = new Messenger&amp;lt;Message&amp;gt;();&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;      // Использует объекты Message&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// telegram.SendMessage(new Message(&quot;Hello World&quot;));&amp;nbsp; &amp;nbsp; // Инициализация Message&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// var outlook = new Messenger&amp;lt;EmailMessage&amp;gt;();&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// outlook.SendMessage(new EmailMessage(&quot;Bye World&quot;));&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;Список всех ограничений&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// where T : struct&#x9;&amp;nbsp; &amp;nbsp;     &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;int, double&#x9;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;         T должен быть структурой&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// where T : class&#x9;&amp;nbsp; &amp;nbsp;     &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;string, object&#x9;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;             T должен быть ссылочным типом&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// where T : new()&#x9;&amp;nbsp; &amp;nbsp;     &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;T obj = new T();&#x9;&amp;nbsp; &amp;nbsp;         T должен иметь конструктор по умолчанию&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// where T : ИмяКласса&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;T : IDisposable&#x9;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;     T должен наследовать указанный класс/инте&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// where T : U&#x9;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;         &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;T : IComparable&amp;lt;T&amp;gt;&#x9;&amp;nbsp; &amp;nbsp; T должен быть производным от U&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;Порядок написания обобщений&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// Название класса, class, struct. Причем мы можем одновременно определить только одно из&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// Название интерфейса&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// new()&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;public interface IEntity {}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;public class Repository&amp;lt;T&amp;gt; where T : class, IEntity, new()&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public void Add(T entity)&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var newEntity = new T();&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // .....&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;Написание нескольких параметров обобщения&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;class Messenger&amp;lt;P,T&amp;gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;where P : PersonObject&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;where T : MessageObject&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public void SendMessage(P sender, P receiver, T message)&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Console.WriteLine($&quot;Отправитель: {sender.Name}&quot;);&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Console.WriteLine($&quot;Получатель: {receiver.Name}&quot;);&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Console.WriteLine($&quot;Сообщение: {message.Text}&quot;);&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;class PersonObject&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public string Name { get;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public PersonObject(string name) =&amp;gt; Name = name;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;class MessageObject&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public string Text { get; } // текст сообщения&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public MessageObject(string text) =&amp;gt;&amp;nbsp; Text = text;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;--------------------------------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;Наследование обобщений - закрытое &lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;background-color: transparent; font-size: 24px;&quot;&gt;обобщение &lt;/b&gt;&lt;b style=&quot;font-size: 24px; background-color: transparent;&quot;&gt;, оставить обобщение, дополнение обобщения &lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;b style=&quot;font-size: 24px; background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;Закрытое обобщение&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;public class Base&amp;lt;T&amp;gt;()&lt;br&gt;{&lt;br&gt;    public T? Data { get; set; }&lt;br&gt;}&lt;br&gt;    &lt;br&gt;// Наследование с указанием конкретного типа&lt;br&gt;public class IntDerived : Base&amp;lt;int&amp;gt;&lt;br&gt;{&lt;br&gt;    public void PrintData()&lt;br&gt;    {&lt;br&gt;        Console.WriteLine(Data);&lt;br&gt;    }&lt;br&gt;}&lt;br&gt;    &lt;br&gt;// Использование&lt;br&gt;// var obj = new IntDerived();&lt;br&gt;// obj.Data = 42;&lt;br&gt;// obj.PrintData(); // 42&lt;/font&gt;&lt;/span&gt;&lt;b style=&quot;color: rgb(0, 0, 0); font-size: 24px; white-space: pre;&quot;&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;Оставить обобщение&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;public class BaseSave&amp;lt;T&amp;gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public T? Data { get; set; }&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// Производный класс тоже обобщённый&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;public class Derived&amp;lt;T&amp;gt; : BaseSave&amp;lt;T&amp;gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; public void LogData()&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Console.WriteLine($&quot;Data: {Data}&quot;);&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// Использование&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// var stringObj = new Derived&amp;lt;string&amp;gt;();&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// stringObj.Data = &quot;Hello&quot;;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;// stringObj.LogData(); // Data: Hello&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;Дополнение обобщения&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;public class BaseAddition&amp;lt;T&amp;gt;&lt;br&gt;{&lt;br&gt;    public T? Value { get; set; }&lt;br&gt;}&lt;br&gt;// Производный класс добавляет новый параметр U&lt;br&gt;public class DerivedParams&amp;lt;T, U&amp;gt; : BaseAddition&amp;lt;T&amp;gt;&lt;br&gt;{&lt;br&gt;    public U? AdditionalData { get; set; }&lt;br&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;// Использование&lt;br&gt;// var obj = new DerivedParams&amp;lt;int, string&amp;gt;();&lt;br&gt;// obj.Value = 100;&lt;br&gt;// obj.AdditionalData = &quot;Extra&quot;;&lt;/span&gt;&lt;b style=&quot;color: rgb(0, 0, 0); font-size: 18px; white-space: pre;&quot;&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 18px; white-space: pre;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;font-size: 18px; white-space: pre; color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;--------------------------------------------------------------------&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font&gt;&lt;div style=&quot;color: rgb(0, 0, 0); font-size: 12px;&quot;&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=middle;horizontal=1;labelPosition=center;verticalLabelPosition=middle;labelBorderColor=none;labelBackgroundColor=none;spacing=0;" parent="1" vertex="1">
          <mxGeometry x="2121.5" y="16520" width="1281" height="8990" as="geometry" />
        </mxCell>
        <mxCell id="605FtFUrUYsoKgKRZK4R-3" value="&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;-------------------------------------------------------------------------------------------------------------------------&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Манипуляции в объектах:&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;b style=&quot;font-size: 24px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-------------------------------------------------------------------------------------------------------------------------&lt;/b&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;b style=&quot;font-size: 24px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Конструктор:&lt;/b&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;blockquote style=&quot;font-size: 12px; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/font&gt;&lt;/blockquote&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="3560" y="16520" width="1280" height="3552" as="geometry" />
        </mxCell>
        <mxCell id="b9FqLcnt7vGdt-Baqenq-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="605FtFUrUYsoKgKRZK4R-6" target="605FtFUrUYsoKgKRZK4R-8">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="605FtFUrUYsoKgKRZK4R-6" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 24px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;/div&gt;&lt;blockquote style=&quot;text-align: left; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;Наследование, преобразование типов, виртуальные методы и св-ва, скрытие методов и св-в, различие переопределения и скрытия методов, абстрактные классы, System.Object класс и его методы, обобщенные типы, их ограничение и наследование.&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;------------------------------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-----------------&lt;/span&gt;&lt;span style=&quot;font-size: 16px; white-space: pre; background-color: transparent;&quot;&gt;-------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 16px; white-space: pre;&quot;&gt;------------------------&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 16px; white-space: pre;&quot;&gt;------------------------------------&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;blockquote style=&quot;text-align: left; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;&lt;b style=&quot;&quot;&gt;Структура abstact, наследование его и релизация&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;text-align: left; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;font style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;abstract class Animal&lt;br&gt;{&lt;br&gt;    // Поле - нужно для конструктора&lt;br&gt;    protected string _name = &quot;&quot;;&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;    // Обычное свойство&lt;br&gt;    public int Age { get; set; }&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;    // Абстрактное свойство (без реализации)&lt;br&gt;    public abstract string Species { get; }&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;    // Абстрактный метод (без тела)&lt;br&gt;    public abstract void MakeSound();&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;    // Обычный метод (с реализацией)&lt;br&gt;    public void Sleep()&lt;br&gt;    {&lt;br&gt;        Console.WriteLine($&quot;{_name} is sleeping...&quot;);&lt;br&gt;    }&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;    // Виртуальный метод (можно переопределить)&lt;br&gt;    public virtual void Eat()&lt;br&gt;    {&lt;br&gt;        Console.WriteLine(&quot;Eating generic food&quot;);&lt;br&gt;    }&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;    // Конструктор (вызывается при создании наследника)&lt;br&gt;    public Animal(string name)&lt;br&gt;    {&lt;br&gt;        _name = name;&lt;br&gt;    }&lt;br&gt;}&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;// Реализаация абстрактного класса&lt;br&gt;// Заметим, обычный метод остаётся в абстракте, но фактически есть и здесь, не переопреде&lt;br&gt;class Dog : Animal&lt;br&gt;{&lt;br&gt;    // Реализация абстрактного свойства - можно только читать переопределён только в DOG&lt;br&gt;    public override string Species =&amp;gt; &quot;Canis lupus familiaris&quot;;&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;    // Реализация абстрактного метода - переопределён&lt;br&gt;    public override void MakeSound()&lt;br&gt;    {&lt;br&gt;        Console.WriteLine(&quot;Bark!&quot;);&lt;br&gt;    }&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;    // Переопределение виртуального метода (необязательно) - можно оставить в абстракте и&lt;br&gt;    public override void Eat()&lt;br&gt;    {&lt;br&gt;        Console.WriteLine(&quot;Eating dog food&quot;);&lt;br&gt;    }&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;    // Вызов конструктора базового класса - используем только инициализацию переменной&lt;br&gt;    public Dog(string name) : base(name) { }&lt;br&gt;}&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;br&gt;// Animal myDog = new Dog(&quot;Rex&quot;);&lt;br&gt;// myDog.MakeSound(); &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;// &quot;Bark!&quot;&lt;br&gt;// myDog.Eat();       &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;// &quot;Eating dog food&quot;&lt;br&gt;// myDog.Sleep();     &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// &quot;Rex is sleeping...&quot;&lt;br&gt;// Console.WriteLine(myDog.Species);   // &quot;Canis lupus familiaris&quot;&lt;/span&gt;&lt;/font&gt;&lt;font face=&quot;var(--ds-font-family-code)&quot;&gt;&lt;span style=&quot;font-size: 18px; text-wrap-mode: wrap;&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;/font&gt;&lt;/blockquote&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="2281.5" y="13960" width="960" height="1600" as="geometry" />
        </mxCell>
        <mxCell id="605FtFUrUYsoKgKRZK4R-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="605FtFUrUYsoKgKRZK4R-8" target="605FtFUrUYsoKgKRZK4R-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="605FtFUrUYsoKgKRZK4R-8" value="&lt;b&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;Абстракция, наследование, полиморфизм, обобщение&lt;/font&gt;&lt;/b&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2121.5" y="15720" width="1280" height="640" as="geometry" />
        </mxCell>
        <mxCell id="605FtFUrUYsoKgKRZK4R-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="605FtFUrUYsoKgKRZK4R-10" target="605FtFUrUYsoKgKRZK4R-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="605FtFUrUYsoKgKRZK4R-10" value="&lt;span style=&quot;font-size: 36px;&quot;&gt;&lt;b&gt;Интерфейсы&lt;/b&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3560" y="15720" width="1280" height="640" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="CcdvH5DKA5weLclHsdTs-2" target="CcdvH5DKA5weLclHsdTs-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="CcdvH5DKA5weLclHsdTs-2" target="CcdvH5DKA5weLclHsdTs-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-11" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="CcdvH5DKA5weLclHsdTs-2" target="CcdvH5DKA5weLclHsdTs-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="b9FqLcnt7vGdt-Baqenq-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="CcdvH5DKA5weLclHsdTs-2" target="b9FqLcnt7vGdt-Baqenq-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-2" value="&lt;font style=&quot;font-size: 60px;&quot;&gt;&lt;b style=&quot;&quot;&gt;ООП реализуем в файлах ClassStructureNamespace,&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;span style=&quot;font-size: 60px;&quot;&gt;&lt;b&gt;InheritPolimorphAbstract&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="760" y="12859" width="1200" height="381" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="CcdvH5DKA5weLclHsdTs-4" target="soBJTtduUBVZZu6cVqsQ-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-4" value="&lt;b style=&quot;font-size: 60px;&quot;&gt;ClassStructureNamespace&lt;/b&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 60px;&quot;&gt;&lt;b&gt;Основы ООП, для того, что бы перейти к наследованию, полиморфизму, интерфейсам&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-522.5" y="13400" width="965" height="400" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="CcdvH5DKA5weLclHsdTs-7" target="605FtFUrUYsoKgKRZK4R-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-7" value="&lt;b style=&quot;font-size: 60px;&quot;&gt;InheritPolimorphAbstract - наследование, полиморфизм, обобщённые типы (немало важная часть)&lt;/b&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2280" y="13395" width="963" height="405" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-13" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="CcdvH5DKA5weLclHsdTs-10" target="CcdvH5DKA5weLclHsdTs-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-10" value="&lt;span style=&quot;font-size: 60px;&quot;&gt;&lt;b&gt;Применение и антипаттерн&lt;/b&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="760" y="13400" width="1200" height="400" as="geometry" />
        </mxCell>
        <mxCell id="CcdvH5DKA5weLclHsdTs-12" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="760" y="13960" width="1200" height="1600" as="geometry" />
        </mxCell>
        <mxCell id="b9FqLcnt7vGdt-Baqenq-5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="b9FqLcnt7vGdt-Baqenq-3" target="b9FqLcnt7vGdt-Baqenq-4">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="b9FqLcnt7vGdt-Baqenq-3" value="&lt;b&gt;&lt;font style=&quot;font-size: 60px;&quot;&gt;Interface&lt;/font&gt;&lt;/b&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="3720" y="13400" width="960" height="400" as="geometry" />
        </mxCell>
        <mxCell id="b9FqLcnt7vGdt-Baqenq-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="b9FqLcnt7vGdt-Baqenq-4" target="605FtFUrUYsoKgKRZK4R-10">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="b9FqLcnt7vGdt-Baqenq-4" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="3720" y="13960" width="960" height="1600" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
